- name: read admin pwd
  shell: cat /var/lib/jenkins/secrets/initialAdminPassword
  register: adminpwd

- name: unlock and add admin user
  jenkins_script:
   script: |
    import jenkins.model.*
    import hudson.security.*
    def instance = Jenkins.getInstance()
    def hudsonRealm = new HudsonPrivateSecurityRealm(false)
    hudsonRealm.createAccount('jenkins', '${user_pwd}')
    instance.setSecurityRealm(hudsonRealm)
    def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
    strategy.setAllowAnonymousRead(false)
    instance.setAuthorizationStrategy(strategy)
    instance.save()
   args:
    user_pwd: "admin55"
   user: admin
   password: "{{ adminpwd.stdout }}"

- name: complete setup wizard
  jenkins_script:
   script: |
    import static jenkins.model.Jenkins.instance as jenkins
    import jenkins.install.InstallState
    if (!jenkins.installState.isSetupComplete()) {
      InstallState.INITIAL_SETUP_COMPLETED.initializeState()
    }
   user: admin
   password: "{{ adminpwd.stdout }}"

 #- name: install plugin
 # jenkins_plugin:
 #  name:
 #    - dashboard-view
 #    - cloudbees-folder
 #    - antisamy-markup-formatter
 #    - build-name-setter
 #    - build-timeout
 #    - config-file-provider
 #    - credentials-binding
 #    - embeddable-build-status
 #    - rebuild ssh-agent
 #    - throttle-concurrents
 #    - timestamper
 #    - ws-cleanup
 #    - ant gradle
 #    - msbuild
 #    - nodejs
 #    - checkstyle
 #    - cobertura
 #    - htmlpublisher
 #    - junit warnings
 #    - xunit
 #    - workflow-aggregator
 #    - github-organization-folder
 #    - pipeline-stage-view
 #    - build-pipeline-plugin
 #    - conditional-buildstep
 #    - jenkins-multijob-plugin
 #    - parameterized-trigger
 #    - copyartifact
 #    - bitbucket
 #    - clearcase
 #    - cvs
 #    - git
 #    - git-parameter
 #    - github
 #    - gitlab-plugin
 #    - p4
 #    - repo
 #    - subversion
 #    - teamconcert
 #    - tfs
 #    - matrix-project
 #    - ssh-slaves
 #    - windows-slaves
 #    - matrix-auth
 #    - pam-auth
 #    - ldap
 #    - role-strategy
 #    - active-directory
 #    - email-ext
 #    - emailext-template
 #    - mailer
 #    - publish-over-ssh
 #    - ssh
 #  state: latest
 #  url_username: admin
 #  url_password: "{{ adminpwd.stdout }}"